/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    DIDManager: {
      address: "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "string",
              name: "did",
              type: "string",
            },
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "DIDCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "string",
              name: "did",
              type: "string",
            },
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "DIDDeleted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "string",
              name: "did",
              type: "string",
            },
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "DIDUpdated",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "did",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "version",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "mainPublicKey",
              type: "string",
            },
            {
              internalType: "string",
              name: "recoPublicKey",
              type: "string",
            },
            {
              internalType: "string",
              name: "serviceEndpoint",
              type: "string",
            },
            {
              internalType: "string",
              name: "didProof",
              type: "string",
            },
          ],
          name: "createDid",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "did",
              type: "string",
            },
          ],
          name: "deleteDid",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getCurrentSender",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getDidList",
          outputs: [
            {
              internalType: "string[]",
              name: "",
              type: "string[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "getDidListByAddress",
          outputs: [
            {
              internalType: "string[]",
              name: "",
              type: "string[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "did",
              type: "string",
            },
          ],
          name: "getDidStatus",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "did",
              type: "string",
            },
          ],
          name: "getDocument",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "did",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "version",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "createdAt",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "updatedAt",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "mainPublicKey",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "recoPublicKey",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "serviceEndpoint",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "didProof",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "owner",
                  type: "address",
                },
              ],
              internalType: "struct DIDManager.DIDDocument",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "did",
              type: "string",
            },
          ],
          name: "getMainPubKeyHex",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "did",
              type: "string",
            },
            {
              internalType: "string",
              name: "newMainPublicKey",
              type: "string",
            },
            {
              internalType: "string",
              name: "newRecoPublicKey",
              type: "string",
            },
            {
              internalType: "string",
              name: "newServiceEndpoint",
              type: "string",
            },
            {
              internalType: "string",
              name: "newDidProof",
              type: "string",
            },
          ],
          name: "updateDid",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 11,
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
